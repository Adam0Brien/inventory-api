syntax = "proto3";

package api.inventory.v1beta1;

import "google/protobuf/empty.proto";
import public "inventory/v1beta1/error.proto";
import public "inventory/v1beta1/policy_relationship.proto";
import public "inventory/v1beta1/update_resource_relationship_by_urnhs_resources_parameter.proto";

option go_package = "api/inventory/v1beta1;v1beta1";
option java_multiple_files = true;
option java_package = "api.inventory.v1beta1";

service RelationshipsService {
  rpc CreatePolicyRelationshipinKessel (CreatePolicyRelationshipinKesselRequest) returns (PolicyRelationship);

  rpc DeleteResourceRelationshipByURN (DeleteResourceRelationshipByURNRequest) returns (google.protobuf.Empty);

  rpc UpdateResourceRelationshipByURNHs (UpdateResourceRelationshipByURNHsRequest) returns (google.protobuf.Empty);

}

message CreatePolicyRelationshipinKesselRequest {
  // The resource relationship to create in Kessel Asset Inventory
  PolicyRelationship policyRelationship = 1;

}

message DeleteResourceRelationshipByURNRequest {
  // The subject {resource} and the object {resource}. A relationship is between a Subject and an Object, e.g. a Policy (subject) has a propagated relationship to an k8s cluster (object)
  UpdateResourceRelationshipByURNHsResourcesParameter resources = 1;

}

message UpdateResourceRelationshipByURNHsRequest {
  // The subject {resource} and the object {resource}. A relationship is between a Subject and an Object, e.g. a Policy (subject) has a propagated relationship to an k8s cluster (object)
  UpdateResourceRelationshipByURNHsResourcesParameter resources = 1;
  // Update a resource relationship in Kessel Asset Inventory by the {subject resource, object resource}. A relationship is between a Subject and an Object, e.g. a Policy (subject) has a propagated relationship to an k8s cluster (object).. The {resource} format \"<reporter_data.reporter_type>:<reporter_data.reporter_id>::<reporter_data.resourceId_alias>\".
  PolicyRelationship policyRelationship = 2;

}

